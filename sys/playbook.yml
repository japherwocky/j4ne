---
- hosts: all
  sudo: yes
  vars:
    project_name: j4ne
    project_root: /opt/{{ project_name }}
    application_path: "{{ project_root }}"
    virtualenv_path: "{{ project_root }}/env"
    project_repo: https://github.com/japherwocky/j4ne.git
    project_uid: 1313
    project_gid: 1313
    project_port: 8013

    system_packages:
      - git
      - ntp
      - build-essential
      - python-virtualenv
      - python3-pip
      - python3.5
      - python3.5-dev
      - nginx
      - ffmpeg 
      - libopus-dev 
      - libffi-dev
      - sqlite3

  pre_tasks:
    - name: set locale
      locale_gen: name="en_US.UTF-8" state=present

    - name: create user
      user: name={{ project_name }}  home={{ project_root }} uid={{ project_uid }} shell=/bin/bash

    - name: create project directory
      file: group={{ project_name }} owner={{ project_name }} mode=755 state=directory path={{ project_root }}

    - name: create logging directory
      file: group={{ project_name }} owner={{ project_name }} mode=755 state=directory path='/var/log/{{ project_name }}'

    - name: set locale for project user
      locale_gen: name="en_US.UTF-8" state=present
      sudo: yes
      sudo_user: "{{ project_name }}"

    - name: add user to vagrant group
      user: name={{ project_name }} groups=vagrant append=yes
      when: vagrant_env == "local"

      # grab a newer stable nginx
    - name: Add nginx apt repository
      apt_repository: repo='ppa:nginx/stable'

    - name: add deadsnakes for.. python 3 stuff
      apt_repository: repo='ppa:fkrull/deadsnakes'

    - name: this for audio / video libs
      apt_repository: repo='ppa:mc3man/trusty-media'

    - apt: update_cache=yes

    - name: Install required system packages.
      apt: pkg={{ item }} state=installed
      with_items: "{{ system_packages }}"

  tasks:

    - name: Pull source code from repository
      git: 
        repo: "{{ project_repo }}"
        dest: "{{ application_path }}" 
      sudo_user: "{{ project_name }}"
      when: vagrant_env != 'local'

    - name: Install nginx configuration file
      template:
        src: "./nginx.conf"
        dest: "/etc/nginx/nginx.conf"
      tags: nginx

    #TODO - trigger this on config change
    - name: Restart nginx
      service: name=nginx state=restarted
      sudo_user: root
      tags: nginx

    - name: Create / update app virtualenv.
      pip: 
        requirements: "{{ application_path }}/requirements.txt" 
        virtualenv: "{{ virtualenv_path }}"
        virtualenv_python: python3.5
      sudo_user: "{{ project_name }}"
      tags: virtualenv

    - name: Install Upstart script
      template:
        src: "./upstart.conf"
        dest: "/etc/init/{{ project_name }}.conf"
      tags: upstart

    - name: Restart app
      service: name={{ project_name }} state=restarted
      sudo_user: root
      tags: upstart
